{
  "Comment": "IAM Access Key expiration state machine",
  "StartAt": "Is this a continuation?",
  "TimeoutSeconds": 60,
  "States": {
    "Is this a continuation?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.Marker",
          "IsPresent": true,
          "Next": "ListUsers (w Marker)"
        }
      ],
      "Default": "ListUsers"
    },
    "ListUsers (w Marker)": {
      "Type": "Task",
      "Next": "Parallel",
      "Parameters": {
        "Marker.$": "$.Marker"
      },
      "Resource": "arn:aws:states:::aws-sdk:iam:listUsers",
      "ResultPath": "$.ListUsersResult"
    },
    "ListUsers": {
      "Type": "Task",
      "Parameters": {},
      "Resource": "arn:aws:states:::aws-sdk:iam:listUsers",
      "ResultPath": "$.ListUsersResult",
      "Next": "Parallel"
    },
    "Parallel": {
      "Type": "Parallel",
      "Branches": [
        {
          "StartAt": "Has more results?",
          "States": {
            "Has more results?": {
              "Type": "Choice",
              "Choices": [
                {
                  "Variable": "$.IsTruncated",
                  "BooleanEquals": true,
                  "Next": "Step Functions StartExecution"
                }
              ],
              "InputPath": "$.ListUsersResult",
              "Default": "Has more results? finish"
            },
            "Has more results? finish": {
              "Type": "Succeed"
            },
            "Step Functions StartExecution": {
              "Type": "Task",
              "Resource": "arn:aws:states:::states:startExecution",
              "Parameters": {
                "StateMachineArn.$": "$$.StateMachine.Id",
                "Input": {
                  "Marker.$": "$.Marker",
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id"
                }
              },
              "End": true
            }
          }
        },
        {
          "StartAt": "For Each User",
          "States": {
            "For Each User": {
              "Type": "Map",
              "ItemsPath": "$.ListUsersResult.Users",
              "ItemProcessor": {
                "StartAt": "ListAccessKeys",
                "States": {
                  "ListAccessKeys": {
                    "Type": "Task",
                    "Parameters": {
                      "UserName.$": "$.UserName"
                    },
                    "Resource": "arn:aws:states:::aws-sdk:iam:listAccessKeys",
                    "ResultPath": "$.ListAccessKeysResult",
                    "Next": "For Each AccessKey"
                  },
                  "For Each AccessKey": {
                    "Type": "Map",
                    "ItemsPath": "$.ListAccessKeysResult.AccessKeyMetadata",
                    "ResultPath": null,
                    "ItemProcessor": {
                      "StartAt": "DynamoDB PutItem",
                      "States": {
                        "DynamoDB PutItem": {
                          "Type": "Task",
                          "Resource": "arn:aws:states:::dynamodb:putItem",
                          "Parameters": {
                            "TableName": "${AccessKeyDynamoDbTableName}",
                            "Item": {
                              "Id": {
                                "S.$": "$.AccessKeyId"
                              },
                              "UserName": {
                                "S.$": "$.UserName"
                              },
                              "CreateDate": {
                                "S.$": "$.CreateDate"
                              }
                            },
                            "ConditionExpression": "attribute_not_exists(Id)"
                          },
                          "Catch": [
                            {
                              "ErrorEquals": [
                                "DynamoDB.ConditionalCheckFailedException"
                              ],
                              "Next": "Catch ConditionCheckFailedException"
                            }
                          ],
                          "End": true
                        },
                        "Catch ConditionCheckFailedException": {
                          "Type": "Pass",
                          "End": true
                        }
                      }
                    },
                    "Next": "Get Key Actions"
                  },
                  "Get Key Actions": {
                    "Type": "Task",
                    "Resource": "${AccessKeyActionsFunctionArn}",
                    "InputPath": "$.ListAccessKeysResult.AccessKeyMetadata",
                    "Retry": [
                      {
                        "ErrorEquals": [
                          "Lambda.ServiceException",
                          "Lambda.AWSLambdaException",
                          "Lambda.SdkClientException",
                          "Lambda.TooManyRequestsException"
                        ],
                        "IntervalSeconds": 1,
                        "MaxAttempts": 6,
                        "BackoffRate": 2.0
                      }
                    ],
                    "ResultPath": "$.GetKeyActionsResult",
                    "Next": "Execute Key Actions"
                  },
                  "Execute Key Actions": {
                    "Type": "Map",
                    "ItemsPath": "$.GetKeyActionsResult",
                    "ItemSelector": {
                      "UserName.$": "$.UserName",
                      "KeyAction.$": "$$.Map.Item.Value"
                    },
                    "ItemProcessor": {
                      "StartAt": "Branch Key Action",
                      "States": {
                        "Branch Key Action": {
                          "Type": "Choice",
                          "Choices": [
                            {
                              "Variable": "$.KeyAction.Action",
                              "StringEquals": "rotate",
                              "Next": "Rotate Access Key"
                            },
                            {
                              "Variable": "$.KeyAction.Action",
                              "StringEquals": "deactivate",
                              "Next": "Deactivate Access Key"
                            },
                            {
                              "Variable": "$.KeyAction.Action",
                              "StringEquals": "delete",
                              "Next": "Delete Access Key"
                            }
                          ]
                        },
                        "Delete Access Key": {
                          "Type": "Task",
                          "Resource": "arn:aws:states:::aws-sdk:iam:deleteAccessKey",
                          "Parameters": {
                            "AccessKeyId.$": "$.KeyAction.AccessKeyId",
                            "UserName.$": "$.UserName"
                          },
                          "ResultPath": null,
                          "Next": "Set DeletionDate"
                        },
                        "Set DeletionDate": {
                          "Type": "Task",
                          "Resource": "arn:aws:states:::dynamodb:updateItem",
                          "Parameters": {
                            "TableName": "${AccessKeyDynamoDbTableName}",
                            "Key": {
                              "Id": {
                                "S.$": "$.KeyAction.AccessKeyId"
                              }
                            },
                            "UpdateExpression": "SET #D = :d",
                            "ExpressionAttributeNames": {
                              "#D": "DeletionDate"
                            },
                            "ExpressionAttributeValues": {
                              ":d": {
                                "S.$": "$$.State.EnteredTime"
                              }
                            }
                          },
                          "End": true
                        },
                        "Rotate Access Key": {
                          "Type": "Task",
                          "Resource": "${AccessKeyRotationFunctionArn}",
                          "Parameters": {
                            "AccessKeyId.$": "$.KeyAction.AccessKeyId",
                            "UserName.$": "$.UserName"
                          },
                          "ResultPath": null,
                          "Retry": [
                            {
                              "ErrorEquals": [
                                "Lambda.ServiceException",
                                "Lambda.AWSLambdaException",
                                "Lambda.SdkClientException",
                                "Lambda.TooManyRequestsException"
                              ],
                              "IntervalSeconds": 1,
                              "MaxAttempts": 6,
                              "BackoffRate": 2.0
                            }
                          ],
                          "Next": "Set RotationDate"
                        },
                        "Set RotationDate": {
                          "Type": "Task",
                          "Resource": "arn:aws:states:::dynamodb:updateItem",
                          "Parameters": {
                            "TableName": "${AccessKeyDynamoDbTableName}",
                            "Key": {
                              "Id": {
                                "S.$": "$.KeyAction.AccessKeyId"
                              }
                            },
                            "UpdateExpression": "SET #R = :r",
                            "ExpressionAttributeNames": {
                              "#R": "RotationDate"
                            },
                            "ExpressionAttributeValues": {
                              ":r": {
                                "S.$": "$$.State.EnteredTime"
                              }
                            }
                          },
                          "End": true
                        },
                        "Deactivate Access Key": {
                          "Type": "Task",
                          "Resource": "arn:aws:states:::aws-sdk:iam:updateAccessKey",
                          "Parameters": {
                            "AccessKeyId.$": "$.KeyAction.AccessKeyId",
                            "UserName.$": "$.UserName",
                            "Status": "Inactive"
                          },
                          "ResultPath": null,
                          "Next": "Set DeactivationDate"
                        },
                        "Set DeactivationDate": {
                          "Type": "Task",
                          "Resource": "arn:aws:states:::dynamodb:updateItem",
                          "Parameters": {
                            "TableName": "${AccessKeyDynamoDbTableName}",
                            "Key": {
                              "Id": {
                                "S.$": "$.KeyAction.AccessKeyId"
                              }
                            },
                            "UpdateExpression": "SET #D = :d",
                            "ExpressionAttributeNames": {
                              "#D": "DeactivationDate"
                            },
                            "ExpressionAttributeValues": {
                              ":d": {
                                "S.$": "$$.State.EnteredTime"
                              }
                            }
                          },
                          "End": true
                        }
                      }
                    },
                    "ResultPath": null,
                    "End": true
                  }
                }
              },
              "ResultPath": null,
              "End": true
            }
          }
        }
      ],
      "End": true
    }
  }
}