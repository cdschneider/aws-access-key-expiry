AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Description: >
  aws-access-key-expiry

  Sample SAM Template for aws-access-key-expiry

Metadata:
  AWS::ServerlessRepo::Application:
    Name: aws-access-key-expiry
    Description: TODO
    Author: Christian Schneider
    SpdxLicenseId: Apache-2.0
    LicenseUrl: LICENSE
    ReadmeUrl: README.md
    HomePageUrl: https://github.com/cdschneider/aws-access-key-expiry
    SourceCodeUrl: https://github.com/cdschneider/aws-access-key-expiry

Parameters:
  AccessKeyTTL:
    Type: Number
    Description: The amount of time (in seconds) before an IAM access key should be expired. 
    Default: 7776000
    MinValue: 300

Resources:
  ExpireAccessKeysStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: statemachine/workflow.asl.json
      DefinitionSubstitutions:
        StatesDateTimeAddFunctionArn: !GetAtt StatesDateTimeAddFunctionAOT.Arn
        AccessKeyExpirationTimeInSeconds: !Ref AccessKeyTTL
      Type: EXPRESS
      Tracing:
        Enabled: True
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt ExpireAccessKeysStateMachineLogGroup.Arn
        IncludeExecutionData: True
        Level: ALL
      Events:
        RecurringSchedule:
          Type: Schedule
          Properties:
            Schedule: "rate(5 minutes)"
            Enabled: True
      Policies:
        - IAMReadOnlyAccess
        - !Ref IAMUpdateAccessKeysPolicy
        - !Ref StepFunctionsTracingPolicy
        - !Ref StepFunctionsLoggingPolicy
        - LambdaInvokePolicy:
            FunctionName: !Ref StatesDateTimeAddFunctionAOT

  ExpireAccessKeysStateMachineLogGroup:
    Type: AWS::Logs::LogGroup

  AccessKeyRotationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src/AccessKeyRotation/
      Handler: 'AccessKeyRotation::AccessKeyRotation.Function::FunctionHandler'
      Runtime: 'dotnet6'
      Architectures:
        - x86_64

  StatesDateTimeAddFunctionAOT:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src/States.DateTimeAdd.Net7/
      Handler: 'bootstrap'
      Runtime: 'provided.al2'
      Architectures:
        - x86_64
    Metadata:
      BuildMethod: 'dotnet7'

  StepFunctionsLoggingPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - 'logs:CreateLogDelivery'
              - 'logs:GetLogDelivery'
              - 'logs:UpdateLogDelivery'
              - 'logs:DeleteLogDelivery'
              - 'logs:ListLogDeliveries'
              - 'logs:PutResourcePolicy'
              - 'logs:DescribeResourcePolicies'
              - 'logs:DescribeLogGroups'
            Resource: '*'

  StepFunctionsTracingPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - 'xray:PutTraceSegments'
              - 'xray:PutTelemetryRecords'
              - 'xray:GetSamplingRules'
              - 'xray:GetSamplingTargets'
            Resource: '*'

  IAMUpdateAccessKeysPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - 'iam:UpdateAccessKey'
            Resource: '*'
